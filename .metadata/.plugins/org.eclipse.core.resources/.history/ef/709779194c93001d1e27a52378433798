package com.ezen.book.controller;

import java.util.List;

import javax.inject.Inject;
import javax.servlet.http.HttpServletRequest;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

import com.ezen.book.domain.BoardVO;
import com.ezen.book.domain.CommentVO;
import com.ezen.book.domain.MemberVO;
import com.ezen.book.domain.PagingVO;
import com.ezen.book.handler.PagingHandler;
import com.ezen.book.repository.BoardDAO;
import com.ezen.book.repository.CommentDAO;
import com.ezen.book.repository.MemberDAO;
import com.ezen.book.service.BoardService;
import com.ezen.book.service.MemberService;

import lombok.extern.slf4j.Slf4j;

@Slf4j
@RequestMapping("/admin/*")
@Controller
public class AdminController {

	@Inject
	private BoardService bsv;
	@Inject
	private MemberService msv;

	@Inject
	private BoardDAO bdao;

	@Inject
	private CommentDAO cdao;

	@Inject
	private MemberDAO mdao;

	@GetMapping("/list")
	public String list(Model model, PagingVO pvo) {
		log.info(">>>pageNo :" + pvo.getPageNo());
		List<BoardVO> list = bsv.getList(pvo);
		model.addAttribute("list", list);
		int totalCount = bsv.getTotalCount(pvo);
		PagingHandler ph = new PagingHandler(pvo, totalCount);
		model.addAttribute("pgh", ph);
		model.addAttribute("content", "boardList");
		model.addAttribute("category", "mantoman");
		return "/member/memberAdmin";
	}

	@GetMapping("/boardDetail")
	public String boardDetail(Model model, @RequestParam("brd_num") int brd_num) {
		model.addAttribute("content", "boardDetail");
		model.addAttribute("category", "mantoman");
		BoardVO board = bsv.getDetail(brd_num);
		bdao.countup(brd_num);
		model.addAttribute("board", board);
		return "/member/memberAdmin";
	}

	@GetMapping("/boardModify")
	public String boardModify(Model model, @RequestParam("brd_num") int brd_num) {
		BoardVO board = bsv.getDetail(brd_num);
		bdao.countup(brd_num);
		model.addAttribute("board", board);
		model.addAttribute("category", "mantoman");
		model.addAttribute("content", "boardModify");
		return "/member/memberAdmin";
	}

	@PostMapping("/modify")
	public String modify(RedirectAttributes reAttr, BoardVO bvo, Model model) {
		log.info("modify>>>" + bvo.toString());
		MemberVO member = mdao.getMember(bvo.getBrd_writer());
		int isUp = bsv.modify(bvo, member);
		log.info(">>>modify:" + (isUp > 0 ? "ok" : "fail"));
		reAttr.addFlashAttribute(isUp > 0 ? "1" : "0");
		bdao.countdown(bvo.getBrd_num());

		return "redirect:/admin/list";
	}

	@GetMapping("/boardRemove")
	public String remove(@RequestParam("brd_num") int brd_num) {
		bdao.removerBoard(brd_num);
		cdao.removeComment(brd_num);
		return "/member/memberAdmin";
	}

	@GetMapping("/memList")
	public String memList(Model model,PagingVO pvo) {
		List<MemberVO> list = msv.getMemList();
		
		
		model.addAttribute("memLi", list);
		model.addAttribute("pvo", ph);
		model.addAttribute("category", "member");
		model.addAttribute("content", "memberList");
		return "/member/memberAdmin";
	}

	@GetMapping("/memRemove")
	public String memRemove(RedirectAttributes reAttr, @RequestParam("mem_num") int mem_num, HttpServletRequest req) {
		MemberVO member = mdao.getUser((MemberVO) req.getSession().getAttribute("ses"));
		log.info("member: " + member);
		log.info(">> 회원탈퇴 체크1<<");
		int isUp = msv.removeMem(mem_num, member);
		log.info(">> 회원탈퇴 : " + (isUp > 0 ? "OK" : "Fail"));
		return "redirect:/admin/memList";
	}

}